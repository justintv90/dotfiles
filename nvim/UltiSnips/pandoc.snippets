extends markdown

# overwrite if necessary
priority -49

global !p
def sub(strToReplace, replacementStr, tabstop):
	tabstop = re.sub('[^0-9a-zA-Z ]+', '', tabstop)
	return re.sub(strToReplace, replacementStr, tabstop)
endglobal

snippet title "Title Header" b
% ${1:`!v Filename('', 'title')`}
% ${2:`!v g:snips_author`}
% ${3:`!v strftime("%d %B %Y")`}

$0
endsnippet

snippet head "jekyll header" b
---
author: Alok Singh  
comments: true  
date: `date +"%Y-%m-%d %T"`+00:00  
layout: post  
slug: `!p snip.rv = sub(' ', '-', t[1].lower())`  
title: $1  
---

endsnippet
#
# Snipmate Snippets for Pandoc Markdown
#
# Many snippets have starred versions, i.e., versions
# that end with an asterisk (`*`). These snippets use
# vim's `"*` register---i.e., the contents of the 
# system clipboard---to insert text.

# Insert Title Block
snippet %%
	% ${1:`Filename('', 'title')`}
	% ${2:`g:snips_author`}
	% ${3:`strftime("%d %b %Y")`}

	${4}
snippet %%*
	% ${1:`Filename('', @*)`}
	% ${2:`g:snips_author`}
	% ${3:`strftime("%d %b %Y")`}

	${4}

# Insert Definition List
snippet ::
	${1:term}
	  ~  ${2:definition}

# Underline with `=`s or `-`s
snippet ===
	`repeat('=', strlen(getline(line(".") - 1)))`

	${1}
snippet ---
	`repeat('-', strlen(getline(line(".") - 1)))`

	${1}

# Links and their kin
# -------------------
#
# (These don't play very well with delimitMate)
#

snippet [
	[${1:link}](http://${2:url} "${3:title}")${4}
snippet [*
	[${1:link}](${2:`@*`} "${3:title}")${4}

snippet [:
	[${1:id}]: http://${2:url} "${3:title}"
snippet [:*
	[${1:id}]: ${2:`@*`} "${3:title}"

snippet [@
	[${1:link}](mailto:${2:email})${3}
snippet [@*
	[${1:link}](mailto:${2:`@*`})${3}

snippet [:@
	[${1:id}]: mailto:${2:email} "${3:title}"
snippet [:@*
	[${1:id}]: mailto:${2:`@*`} "${3:title}"

snippet ![
	![${1:alt}](${2:url} "${3:title}")${4}
snippet ![*
	![${1:alt}](${2:`@*`} "${3:title}")${4}

snippet ![:
	![${1:id}]: ${2:url} "${3:title}"
snippet ![:*
	![${1:id}]: ${2:`@*`} "${3:title}"

snippet [^:
	[^${1:id}]: ${2:note}
snippet [^:*
	[^${1:id}]: ${2:`@*`}
extends mkd

snippet %% "Title block" b
% ${1:`!v Filename('', 'title')`}
% ${2:`!v g:snips_author`}
% ${3:`!v strftime("%d %b %Y")`}

$0
endsnippet

snippet %%v "Title block" b
% ${VISUAL:`!v Filename('', 'title')`}
% ${2:`!v g:snips_author`}
% ${3:`!v strftime("%d %b %Y")`}

$0
endsnippet

snippet :: "Definition" b
${1:term}
  ~  ${2:definition}
endsnippet

snippet ===
`!p
snip.rv = '=' * len(vim.current.buffer[vim.current.window.cursor[0] - 2])
`
endsnippet

snippet ---
`!p
snip.rv = '-' * len(vim.current.buffer[vim.current.window.cursor[0] - 2])
`
endsnippet

snippet [
[${1:link}](http://${2:url} "${3:title}")$0
endsnippet

snippet [:
[${1:id}]: http://${2:url} "${3:title}"
endsnippet

snippet [@
[${1:link}](mailto:${2:email})${3}
endsnippet

snippet ![
![${1:alt}](${2:url} "${3:tirle}")$0
endsnippet

snippet ![:
![${1:id}]: ${2:url} "${3:title}"
endsnippet

snippet [^:
[^${1:id}]: ${2:note}
endsnippet


snippet jtemp "journal template"
* what did I do today
* what did I do wrong
* what did I do well
* what do I think about what happened today

$0
endsnippet

